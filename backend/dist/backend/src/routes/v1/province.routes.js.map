{
  "version": 3,
  "sources": ["../../../../../src/routes/v1/province.routes.ts"],
  "sourcesContent": ["import provinceController from \"@/controllers/province.controller\"\r\nimport { getDistrictValidator, getWardValidator } from \"@/middlewares/province.middleware\"\r\nimport { wrapRequestHandler } from \"@/utils/handler\"\r\nimport { Router } from \"express\"\r\n\r\n\r\nconst provinceRouter = Router()\r\n\r\n// TODO: province validation middlewares\r\n/**\r\n * Description: Get list province\r\n * Path: /\r\n * Method: GET\r\n * Header: { Authorization: Bearer <access_token> }\r\n */\r\n\r\nprovinceRouter.get('', wrapRequestHandler(provinceController.getProvince))\r\n\r\n/**\r\n * Description: Get province and it's district\r\n * Path: /\r\n * Method: GET\r\n * Header: { Authorization: Bearer <access_token> }\r\n */\r\n\r\nprovinceRouter.get('/:id', getDistrictValidator, wrapRequestHandler(provinceController.getDistrict))\r\n\r\n/**\r\n * Description: Get list province\r\n * Path: /\r\n * Method: GET\r\n * Header: { Authorization: Bearer <access_token> }\r\n */\r\n\r\nprovinceRouter.get('/:id/:did', getWardValidator, wrapRequestHandler(provinceController.getWard))\r\n\r\nexport default provinceRouter\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA+B;AAC/B,IAAAA,mBAAuD;AACvD,qBAAmC;AACnC,qBAAuB;AAGvB,MAAM,qBAAiB,uBAAO;AAU9B,eAAe,IAAI,QAAI,mCAAmB,gBAAAC,QAAmB,WAAW,CAAC;AASzE,eAAe,IAAI,QAAQ,2CAAsB,mCAAmB,gBAAAA,QAAmB,WAAW,CAAC;AASnG,eAAe,IAAI,aAAa,uCAAkB,mCAAmB,gBAAAA,QAAmB,OAAO,CAAC;AAEhG,IAAO,0BAAQ;",
  "names": ["import_province", "provinceController"]
}
