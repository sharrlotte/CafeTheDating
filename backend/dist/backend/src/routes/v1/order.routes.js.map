{
  "version": 3,
  "sources": ["../../../../../src/routes/v1/order.routes.ts"],
  "sourcesContent": ["import { UserRole } from '@/constants/enums'\r\nimport orderController from '@/controllers/order.controller'\r\nimport { requireLoginMiddleware, requireRoleMiddleware } from '@/middlewares/auth.middlewares'\r\nimport { objectIdValidator } from '@/middlewares/commons.middleware'\r\nimport { createOrderValidator } from '@/middlewares/order.middlewares'\r\nimport { wrapRequestHandler } from '@/utils/handler'\r\nimport { Router } from 'express'\r\n\r\nconst orderRouter = Router()\r\n\r\norderRouter.get('/', requireLoginMiddleware, wrapRequestHandler(orderController.getAllOrderByUser))\r\n\r\norderRouter.post('/', requireLoginMiddleware, createOrderValidator, wrapRequestHandler(orderController.createOrder))\r\n\r\norderRouter.put('/:id', requireRoleMiddleware(UserRole.Admin), objectIdValidator, wrapRequestHandler(orderController.updateOrder))\r\n\r\norderRouter.put('/:id/cancel', requireLoginMiddleware, objectIdValidator, wrapRequestHandler(orderController.cancelOrder))\r\n\r\nexport default orderRouter\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAyB;AACzB,mBAA4B;AAC5B,kBAA8D;AAC9D,qBAAkC;AAClC,IAAAA,gBAAqC;AACrC,qBAAmC;AACnC,qBAAuB;AAEvB,MAAM,kBAAc,uBAAO;AAE3B,YAAY,IAAI,KAAK,wCAAwB,mCAAmB,aAAAC,QAAgB,iBAAiB,CAAC;AAElG,YAAY,KAAK,KAAK,oCAAwB,wCAAsB,mCAAmB,aAAAA,QAAgB,WAAW,CAAC;AAEnH,YAAY,IAAI,YAAQ,mCAAsB,sBAAS,KAAK,GAAG,sCAAmB,mCAAmB,aAAAA,QAAgB,WAAW,CAAC;AAEjI,YAAY,IAAI,eAAe,oCAAwB,sCAAmB,mCAAmB,aAAAA,QAAgB,WAAW,CAAC;AAEzH,IAAO,uBAAQ;",
  "names": ["import_order", "orderController"]
}
