{
  "version": 3,
  "sources": ["../../../../src/controllers/product.controllers.ts"],
  "sourcesContent": ["import { NextFunction, Request, Response } from 'express'\r\nimport { ParamsDictionary } from 'express-serve-static-core'\r\nimport { StatusCodes } from 'http-status-codes'\r\nimport { ParsedUrlQuery } from 'querystring'\r\nimport { CreateProductBody } from '@/@types/request.type'\r\nimport productService from '@/services/product.service'\r\n\r\nconst productController = {\r\n  getAllProduct: async (req: Request<ParamsDictionary, any, any, ParsedUrlQuery>, res: Response, next: NextFunction) => {\r\n    const result = await productService.getAllProduct(req.query)\r\n    res.status(StatusCodes.OK).json(result)\r\n  },\r\n  createProduct: async (req: Request<ParamsDictionary, any, CreateProductBody, ParsedUrlQuery>, res: Response, next: NextFunction) => {\r\n    const result = await productService.createProduct(req.body, req.file)\r\n    res.status(StatusCodes.OK).json(result)\r\n  },\r\n  updateProduct: async (req: Request<ParamsDictionary, any, CreateProductBody, ParsedUrlQuery>, res: Response, next: NextFunction) => {\r\n    const result = await productService.updateProduct(req.params.id, req.body)\r\n    res.status(StatusCodes.OK).json(result)\r\n  },\r\n  deleteProduct: async (req: Request<ParamsDictionary, any, any, ParsedUrlQuery>, res: Response, next: NextFunction) => {\r\n    const result = await productService.deleteProduct(req.params.id)\r\n    res.status(StatusCodes.OK).json(result)\r\n  },\r\n  uploadImage: async (req: Request<ParamsDictionary, any, any, ParsedUrlQuery>, res: Response, next: NextFunction) => {\r\n    const result = await productService.uploadImage(req.params.id, req.file)\r\n    res.status(StatusCodes.OK).json({ url: result })\r\n  }\r\n}\r\n\r\nexport default productController\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,+BAA4B;AAG5B,qBAA2B;AAE3B,MAAM,oBAAoB;AAAA,EACxB,eAAe,OAAO,KAA0D,KAAe,SAAuB;AACpH,UAAM,SAAS,MAAM,eAAAA,QAAe,cAAc,IAAI,KAAK;AAC3D,QAAI,OAAO,qCAAY,EAAE,EAAE,KAAK,MAAM;AAAA,EACxC;AAAA,EACA,eAAe,OAAO,KAAwE,KAAe,SAAuB;AAClI,UAAM,SAAS,MAAM,eAAAA,QAAe,cAAc,IAAI,MAAM,IAAI,IAAI;AACpE,QAAI,OAAO,qCAAY,EAAE,EAAE,KAAK,MAAM;AAAA,EACxC;AAAA,EACA,eAAe,OAAO,KAAwE,KAAe,SAAuB;AAClI,UAAM,SAAS,MAAM,eAAAA,QAAe,cAAc,IAAI,OAAO,IAAI,IAAI,IAAI;AACzE,QAAI,OAAO,qCAAY,EAAE,EAAE,KAAK,MAAM;AAAA,EACxC;AAAA,EACA,eAAe,OAAO,KAA0D,KAAe,SAAuB;AACpH,UAAM,SAAS,MAAM,eAAAA,QAAe,cAAc,IAAI,OAAO,EAAE;AAC/D,QAAI,OAAO,qCAAY,EAAE,EAAE,KAAK,MAAM;AAAA,EACxC;AAAA,EACA,aAAa,OAAO,KAA0D,KAAe,SAAuB;AAClH,UAAM,SAAS,MAAM,eAAAA,QAAe,YAAY,IAAI,OAAO,IAAI,IAAI,IAAI;AACvE,QAAI,OAAO,qCAAY,EAAE,EAAE,KAAK,EAAE,KAAK,OAAO,CAAC;AAAA,EACjD;AACF;AAEA,IAAO,8BAAQ;",
  "names": ["productService"]
}
