{
  "version": 3,
  "sources": ["../../../../src/constants/message.ts"],
  "sourcesContent": ["export const DATABASE_MESSAGE = {\r\n  DB_MAIN: {\r\n    NAME: 'Database access name in the ',\r\n    USERNAME: 'Username credentials to access the database main',\r\n    PASSWORD: 'Password credentials to access the database main ',\r\n    CONNECT: '\uD83C\uDF31 Connected to DB Code Arena successfully!',\r\n    DISCONNECT: '\u26D4\uFE0F Disconnected from the database main successfully!',\r\n    USER_COLLECTION: 'The table holds user information in the database.',\r\n    REFRESH_TOKEN_COLLECTION: 'The table holds refresh-token information in the database.',\r\n    OTP_COLLECTION: 'The table holds otp information in the database.',\r\n    FOLLOW_COLLECTION: 'The table holds follow information in the database.',\r\n    BLOCKED_USER_COLLECTION: 'The table holds user block user information in the database.',\r\n    CLOSE_FRIENDS_COLLECTION: 'The table holds close friends information in the database.'\r\n  }\r\n} as const\r\n\r\nexport const JWT_MESSAGES = {\r\n  JWT_SECRET_KEY: 'This \u201CSecret\u201D string is unique to the application and must be prioritized and carefully stored securely on the server side.',\r\n  JWT_REFRESH_TOKEN_KEY: 'This \u201CSecret\u201D string is unique to the application and must be prioritized and carefully stored securely on the server side.',\r\n  ACCESS_TOKEN_EXPIRES_IN: 'Duration of existence of access_token',\r\n  REFRESH_TOKEN_EXPIRES_IN: 'Duration of existence of access_token',\r\n  JWT_ALGORITHM: 'List of strings with the names of the allowed algorithms'\r\n} as const\r\n\r\nexport const ENV_MESSAGE = {\r\n  PORT: 'Port server is using',\r\n  HOST: 'Host server is using',\r\n  DEV: 'Environment is a collection of procedures and tools for developing, testing and debugging an application or program.',\r\n  PROD: 'Environment contains just the final version of the product in order to avoid any confusion or security vulnerabilities',\r\n  TEST: 'Environment is where the testing teams analyze the quality of the application/program.'\r\n} as const\r\n\r\nexport const CLIENT_MESSAGE = {\r\n  REQ_POINT: 'Maximum number of points can be consumed over duration',\r\n  REQ_DURATION: 'Number of seconds before consumed points are reset.',\r\n  PASSWORD_SECRET: 'String of numeric or character values used in security systems',\r\n  OTP_SECRET: 'String of numeric or character values used in security systems',\r\n  COOKIES_EXPIRES_IN: 'Cookie expires in the system',\r\n  SECRET_COOKIE_NAME: 'Cookies_name when user login and register success and save local'\r\n} as const\r\n\r\nexport const VALIDATION_MESSAGES = {\r\n  TITLE: 'Validation Error',\r\n  PAGINATION: {\r\n    PAGE_CAN_NOT_LESS_THAN_ZERO: 'Page number cannot less than zero',\r\n    ITEMS_IS_NOT_IN_RANGE: 'Item per page can not less than zero and greater than 100'\r\n  },\r\n  UPLOAD: {\r\n    IMAGE: {\r\n      INVALID_IMAGE_EXTENSION: 'Image extension is invalid',\r\n      INVALID_IMAGE_SIZE: 'Image is too large'\r\n    }\r\n  },\r\n  USER: {\r\n    COMMONS: {\r\n      USER_WITH_ID_IS_NOT_EXIST: 'User with id is not exist',\r\n      USER_ID_MUST_BE_A_STRING: 'User id must be a string',\r\n      USER_ID_CAN_NOT_BE_EMPTY: 'User id cannot be empty',\r\n      USER_NOT_LOGIN: 'You must logged in to continue',\r\n      USER_NOT_ROLE_NOT_SATISFIED: 'You don not have the right role to access this resources',\r\n      USER_ID_IS_INVALID: 'User id is invalid',\r\n      USERNAME_MUST_BE_STRING: 'Username must be a string'\r\n    },\r\n    REFRESH_TOKEN: {\r\n      REFRESH_TOKEN_IS_REQUIRED: 'Refresh token is required',\r\n      REFRESH_TOKEN_IS_NOT_EXIST: 'Refresh token is not exist'\r\n    }\r\n  },\r\n  TOKEN: {\r\n    ACCESS_TOKEN_IS_REQUIRED: 'Access_token is required',\r\n    ACCESS_TOKEN_MUST_BE_A_STRING: 'Access_token must be a string',\r\n    INVALID_BEARER_TOKEN: 'Invalid bearer token',\r\n    REFRESH_TOKEN_IS_REQUIRED: 'Refresh_token is required',\r\n    REFRESH_TOKEN_MUST_BE_A_STRING: 'Refresh_token must be a string',\r\n    REFRESH_TOKEN_USED_OR_NOT_EXIST: 'Used refresh token or not exist',\r\n    REFRESH_TOKEN_IS_NOT_EXIST_IN_COOKIES: 'No refresh token in cookies!'\r\n  }\r\n} as const\r\n\r\nexport const REQUEST_QUERY_MESSAGES = {\r\n  MAX_ITEM_PER_PAGE: 'How many items per page'\r\n} as const\r\n\r\nexport const CLOUDINARY_MESSAGES = {\r\n  CLOUDINARY_KEY: 'Key to access cloudinary',\r\n  CLOUDINARY_SECRET: 'Password to access cloudinary',\r\n  CLOUDINARY_NAME: 'Cloud name of current cloudinary account',\r\n  CLOUDINARY_AVATAR_FOLDER: 'Folder that contain avatar images on cloudinary',\r\n  CLOUDINARY_THUMBNAIL_FOLDER: 'Folder that contain thumbnail images on cloudinary'\r\n}\r\n\r\nexport const AUTH_MESSAGES = {\r\n  FACEBOOK: {\r\n    CLIENT_ID: 'ID to login with facebook and oauth2',\r\n    CLIENT_SECRET: 'Password to login with facebook and oauth2',\r\n    CALLBACK_URL: 'Url that facebook callback when authenticate'\r\n  },\r\n  GOOGLE: {\r\n    CLIENT_ID: 'ID to login with google and oauth2',\r\n    CLIENT_SECRET: 'Password to login with google and oauth2',\r\n    CALLBACK_URL: 'Url that google callback when authenticate'\r\n  }\r\n}\r\n\r\nexport const URL_MESSAGES = {\r\n  AUTH_SUCCESS_URL: 'URL that user get redirected when authenticate success',\r\n  AUTH_FAIL_URL: 'URL that user get redirected when authenticate fail'\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,MAAM,mBAAmB;AAAA,EAC9B,SAAS;AAAA,IACP,MAAM;AAAA,IACN,UAAU;AAAA,IACV,UAAU;AAAA,IACV,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,iBAAiB;AAAA,IACjB,0BAA0B;AAAA,IAC1B,gBAAgB;AAAA,IAChB,mBAAmB;AAAA,IACnB,yBAAyB;AAAA,IACzB,0BAA0B;AAAA,EAC5B;AACF;AAEO,MAAM,eAAe;AAAA,EAC1B,gBAAgB;AAAA,EAChB,uBAAuB;AAAA,EACvB,yBAAyB;AAAA,EACzB,0BAA0B;AAAA,EAC1B,eAAe;AACjB;AAEO,MAAM,cAAc;AAAA,EACzB,MAAM;AAAA,EACN,MAAM;AAAA,EACN,KAAK;AAAA,EACL,MAAM;AAAA,EACN,MAAM;AACR;AAEO,MAAM,iBAAiB;AAAA,EAC5B,WAAW;AAAA,EACX,cAAc;AAAA,EACd,iBAAiB;AAAA,EACjB,YAAY;AAAA,EACZ,oBAAoB;AAAA,EACpB,oBAAoB;AACtB;AAEO,MAAM,sBAAsB;AAAA,EACjC,OAAO;AAAA,EACP,YAAY;AAAA,IACV,6BAA6B;AAAA,IAC7B,uBAAuB;AAAA,EACzB;AAAA,EACA,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,yBAAyB;AAAA,MACzB,oBAAoB;AAAA,IACtB;AAAA,EACF;AAAA,EACA,MAAM;AAAA,IACJ,SAAS;AAAA,MACP,2BAA2B;AAAA,MAC3B,0BAA0B;AAAA,MAC1B,0BAA0B;AAAA,MAC1B,gBAAgB;AAAA,MAChB,6BAA6B;AAAA,MAC7B,oBAAoB;AAAA,MACpB,yBAAyB;AAAA,IAC3B;AAAA,IACA,eAAe;AAAA,MACb,2BAA2B;AAAA,MAC3B,4BAA4B;AAAA,IAC9B;AAAA,EACF;AAAA,EACA,OAAO;AAAA,IACL,0BAA0B;AAAA,IAC1B,+BAA+B;AAAA,IAC/B,sBAAsB;AAAA,IACtB,2BAA2B;AAAA,IAC3B,gCAAgC;AAAA,IAChC,iCAAiC;AAAA,IACjC,uCAAuC;AAAA,EACzC;AACF;AAEO,MAAM,yBAAyB;AAAA,EACpC,mBAAmB;AACrB;AAEO,MAAM,sBAAsB;AAAA,EACjC,gBAAgB;AAAA,EAChB,mBAAmB;AAAA,EACnB,iBAAiB;AAAA,EACjB,0BAA0B;AAAA,EAC1B,6BAA6B;AAC/B;AAEO,MAAM,gBAAgB;AAAA,EAC3B,UAAU;AAAA,IACR,WAAW;AAAA,IACX,eAAe;AAAA,IACf,cAAc;AAAA,EAChB;AAAA,EACA,QAAQ;AAAA,IACN,WAAW;AAAA,IACX,eAAe;AAAA,IACf,cAAc;AAAA,EAChB;AACF;AAEO,MAAM,eAAe;AAAA,EAC1B,kBAAkB;AAAA,EAClB,eAAe;AACjB;",
  "names": []
}
