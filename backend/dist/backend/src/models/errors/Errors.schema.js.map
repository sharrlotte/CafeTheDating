{
  "version": 3,
  "sources": ["../../../../../src/models/errors/Errors.schema.ts"],
  "sourcesContent": ["import moment from 'moment'\r\nimport { StatusCodes } from 'http-status-codes'\r\nimport { ErrorEntityType, ErrorType } from '@/@types/errors.type'\r\n\r\ntype ErrorsType = Record<string, ErrorEntityType>\r\n\r\nexport class ErrorWithStatus {\r\n  statusCode: number\r\n  message: string\r\n  created_at: string\r\n  updated_at: string\r\n  messageConstants: string\r\n\r\n  constructor({ statusCode, message, created_at, updated_at, messageConstants }: ErrorType) {\r\n    this.statusCode = statusCode\r\n    this.message = message\r\n    this.created_at = created_at || moment(new Date()).format('DD-MM-YYYY\\\\tHH:mm:ssSSS')\r\n    this.updated_at = updated_at || moment(new Date()).format('DD-MM-YYYY\\\\tHH:mm:ssSSS')\r\n    this.messageConstants = messageConstants || null\r\n  }\r\n}\r\n\r\nexport class ErrorEnity extends ErrorWithStatus {\r\n  errors: ErrorsType\r\n  constructor({ message = 'Error', errors }: { message?: string; errors: ErrorsType }) {\r\n    super({ message, statusCode: StatusCodes.UNPROCESSABLE_ENTITY })\r\n    this.errors = errors\r\n  }\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAmB;AACnB,+BAA4B;AAKrB,MAAM,gBAAgB;AAAA,EAC3B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAEA,YAAY,EAAE,YAAY,SAAS,YAAY,YAAY,iBAAiB,GAAc;AACxF,SAAK,aAAa;AAClB,SAAK,UAAU;AACf,SAAK,aAAa,kBAAc,cAAAA,SAAO,oBAAI,KAAK,CAAC,EAAE,OAAO,0BAA0B;AACpF,SAAK,aAAa,kBAAc,cAAAA,SAAO,oBAAI,KAAK,CAAC,EAAE,OAAO,0BAA0B;AACpF,SAAK,mBAAmB,oBAAoB;AAAA,EAC9C;AACF;AAEO,MAAM,mBAAmB,gBAAgB;AAAA,EAC9C;AAAA,EACA,YAAY,EAAE,UAAU,SAAS,OAAO,GAA6C;AACnF,UAAM,EAAE,SAAS,YAAY,qCAAY,qBAAqB,CAAC;AAC/D,SAAK,SAAS;AAAA,EAChB;AACF;",
  "names": ["moment"]
}
